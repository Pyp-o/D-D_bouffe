@startuml

abstract class SalleEvenement{
+declancherEvenement()
}

abstract class Item{
+nom : string
+getDescription() : string
}

abstract class Personnage{
+nom : string
+competences : list<Competence>
+Pvmax : int
+Pv : int
+Pcmax : int
+Pc : int
+agilite : int
+initiative : int
+attaque : int
+defense : int
+statut : Statut
+arme : Arme
+armure : Armure
+afficherStat()
+AfficherPersonnage()
}

abstract class Statut{
+tourRestant : int
+nom : String
+activerStatut(Combattant combattant)
+retirerStatut(Combattant combattant)
}


abstract class Competence{
+nom : string
+cout : int
+description : string
+groupe : bool
+tauxReussite : int
+activerCompetence(Combattant combattant, Team allie, Team ennemi)
+affcigerCompetence()
}

class CompetenceHeal{
-soin : int
}

class CompetenceInvocation{
-invoc : Combattant
}

class CompetenceRecrutement{
-tauxSupp : int
}

class CompetenceAttaque{
-degat : int
-degatFixe : int
-statut : Statut
}

class CompetenceBuff{
-degatBuff : int
-defenseBuff : int
-agiliteBuff : int
-forEnnemi : bool
}

Class CompetenceStatut{
-forEnnemi : bool
-statut : Statut
}

abstract class Equipement{
+porteur : Personnage
+afficherEquipement()
}

class Moteur{
-map : Map
-etage : int
-tailleMapX : int
-tailleMapY : int
-bossTue : bool
-teamHero : Hero
+getTeamHero() : Team
+nouvelleEtage()
+initTeam()
+tour()
+gérerEvent(String event)
+loot(String rarete)
+combatDeBoss()
+getEnnemi() : Ennemi
+selectPerso(list<int> choix)
}

class Combat{
-teamHero : Team
-teamEnnemi : Team
-teamCombattantsEnnemi : list<Combattant>
-teamCombattantsHero : list<Combattant>
-teamHeroMorte : bool
-teamEnnemieMorte : bool
+fuiteReussi : bool
-tour : int
-lancerCombat()
-tourCombattant(Combattant)
-choixJoueur(Combattant)
-fuir(Combattant)
-heroUtiliserCompetence(Combattant)
-heroAttaque(Combattant)
-choixIA(Combattant)
-resetTour()
-isFinDeTour() : bool
-creationCombattant()
-definitionOrdrePassage()
-getProchainCombattant() : Combattant
-testTeamMorte()
-finCombat()
}

Class Ennemi{
+chanceRejoindre : int
+rejointHero : bool
+loot : list<Item>
+chanceLoot : list<Int>
}

class Combattant{
+teamHero : bool
+perso : Personnage
+tourFini : bool
+statuts : list<Statut>
+ordre : int
+attaquer(Personnage combattant)
+seDefendre()
+activerStatut()
}

class Team{
+personnages : list<Personnage>
+inventaire : Inventaire
+getLenPersonnage() : int
}

class Arme{
+degat : int
}

class Armure{
+bloquage : int
}

class Consommable{
+soin : int
+energie : int
+faitRevivre : bool
+PVMax : int
+PCMax : int
+attaque : int
+defense : int
+agilite : int
+initiative : int
+utiliser(Personnage perso)
}

class ArmeConsommable{
}

class Ressource{

}

class Inventaire{
+items : list<Items>
+afficherEquipement()
+afficherEquipementEquipe(Personnage)
+afficherEquipementDesequipe()
+afficherConsommables()
+getEquipementEquipe(Personnage)
+getEquipementDesequipe()
+getConsommables()
+Equiper(Personnage)
+Desequiper(Personnage)
+Manger(Personnage)
+CreerPotion()
+choixAction(list<Personnage>)
+selectPerso() : Personnage
+selectAction()
+selectEquipement(list<Equipement>)
}

class Map{
+tailleX : int
+tailleY : int
+salles[][] : Salle
+positionX : int
+positionY : int
+levierActive : bool
+Map(tailleX, tailleY)
+genererMap()
+recupérerSalle(int x, int y)
+seDeplacer()
+creerSalle()
+creationSalleFrontiere()
+display()
+createSalleEvent()
+recuérerSalleActuelle()
+declancherEvent() : String

}

class Salle{
+isExplore : bool
+x : int
+y : int
+salleGauche : Salle
+salleDroite : Salle
+salleHaut : Salle
+salleBas: Salle
+declancherEvent() : String

}

class SalleSortie{
}

class SalleCuisine{
-visite : bool
}

class SalleBuffet{
-visite : bool
}

class SalleGardeManger{
-visite : bool
}

class SalleLevier{
}

class SalleCache{
-visite : bool
}

class Ralenti{
-activer : bool
}
class Ivre{
-activer : bool
}

Personnage "1" -- "*" Competence
CompetenceInvocation --|> Competence
CompetenceRecrutement --|> Competence
CompetenceHeal --|> Competence
CompetenceAttaque --|> Competence
CompetenceBuff --|> Competence
CompetenceStatut --|> Competence
Personnage "1" -- "*" Statut
Empoisonné --|> Statut
Paralysé --|> Statut
Ralenti --|> Statut
Ivre --|> Statut
Endormi --|> Statut
Combattant --|> Personnage
Personnage <|-- Hero
Personnage <|-- Ennemi
Equipement --|> Item
Arme --|> Equipement
Armure --|> Equipement
Consommable --|> Item
Combat "1" -- "*" Combattant
ArmeConsommable --|> Consommable
ArmeConsommable --|> Arme
Ressource --|> Item
Moteur "1" -- "*" Team
Moteur "1" -- "0" Combat
Combat "*" -- "*" Team
Moteur "1" -- "1" Map
Map "1" *-- "*" Salle
SalleEntree --|> SalleEvenement
SalleSortie --|> SalleEvenement
SalleEvenement --|> Salle
SallePiege --|> SalleEvenement
SalleBuffet --|> SalleEvenement
SalleGardeManger --|> SalleEvenement
SalleCache --|> SalleEvenement
SalleLevier --|> SalleEvenement
SalleCuisine --|> SalleEvenement

Team "1" o-- "*" Personnage
Team "1" -- "1" Inventaire
Inventaire "1" o-- "*" Item


@enduml

/'commande : java -jar plantuml.jar classe.txt '/
